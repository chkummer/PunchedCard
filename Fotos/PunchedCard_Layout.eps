%!PS-Adobe-2.0 EPSF-1.2
%%Title: PunchedCard (../Fotos/PunchedCard_Layout.eps)
%%Creator: punchcard.sh (https://github.com/chkummer/PunchedCard)
%%CreationDate: 24-Jun-2020
%%BoundingBox: 0 0 611 304
%%EndComments

%%BeginProcSet
% Outline of a punched card where the upper left corner was cut
/cardOutline
 { newpath
   0 0 0 setrgbcolor
   1.5 setlinewidth
   18 0 moveto
   495 0 rlineto
   513 18 18 270 360 arc
   0 198 rlineto
   513 216 18 0 90 arc
   -495  0 rlineto
   -18 -31.176 rlineto
   0 -184.824 rlineto
   18 18 18 180 270 arc
   closepath
   stroke } def
/Pos 0 def
/Hole 0 def

/hole
 { newpath moveto
   0 0 0 setrgbcolor
   0.25 setlinewidth
   -1.98 -4.5 rmoveto
   3.96 0 rlineto
   0 9 rlineto
   -3.96 0 rlineto
   0 -9 rlineto
   closepath
   gsave fill grestore } def

/punchHole
 { /XPos Pos 6.264 mul 11.808 add def
   XPos [180 162 144 126 108 90 72 54 36 18 0 198 216] Hole get hole } def

/DotMatrixPattern <00 00 00 00 00 00 00 00> def

/printDotMatrix
 { newpath
   /XPos Pos 6.264 mul 9 add def
   0.5 0.5 0.5 setrgbcolor
   gsave
   XPos 225 translate
   6 6 scale
   8 8 true
   [8 0 0 8 0 0] { DotMatrixPattern } imagemask
   grestore } bind def

/centreshow
 { /mystring exch def
   mystring stringwidth pop -2 div 0 rmoveto
   mystring show } def

/rightshow
 { dup stringwidth pop
   0 exch sub
   0 rmoveto
   show } def

/printGrid
 { 0.25 setlinewidth
   /PosStr 2 string def
   /Pos 1 def
   /Helvetica-Narrow findfont
   8 scalefont setfont
   % columns
   {
     /XPos Pos 6.264 mul 11.5 add def
     XPos -8 moveto 0 232 rlineto stroke
     XPos -15 moveto
     Pos PosStr cvs centreshow
     /Pos Pos 2 add def
     Pos 80 gt
     { exit } if
   } loop
   /Pos 2 def
   {
     /XPos Pos 6.264 mul 11.5 add def
     XPos -16 moveto 0 240 rlineto stroke
     XPos -23 moveto Pos PosStr cvs centreshow
     /Pos Pos 2 add def
     Pos 80 gt
     { exit } if
   } loop
   265 -32 moveto
   (Punching columns) centreshow
   % punch positions
   -8 216 moveto 525 0 rlineto stroke
   -9 213 moveto (12) rightshow
   -8 198 moveto 525 0 rlineto stroke
   -9 195 moveto (11) rightshow
   -8 180 moveto 525 0 rlineto stroke
   -9 177 moveto (0) rightshow
   -8 162 moveto 525 0 rlineto stroke
   -9 159 moveto (1) rightshow
   -8 144 moveto 525 0 rlineto stroke
   -9 141 moveto (2) rightshow
   -8 126 moveto 525 0 rlineto stroke
   -9 123 moveto (3) rightshow
   -8 108 moveto 525 0 rlineto stroke
   -9 105 moveto (4) rightshow
   -8 90 moveto 525 0 rlineto stroke
   -9 87 moveto (5) rightshow
   -8 72 moveto 525 0 rlineto stroke
   -9 69 moveto (6) rightshow
   -8 54 moveto 525 0 rlineto stroke
   -9 51 moveto (7) rightshow
   -8 36 moveto 525 0 rlineto stroke
   -9 33 moveto (8) rightshow
   -8 18 moveto 525 0 rlineto stroke
   -9 15 moveto (9) rightshow
   -20 80 moveto
   90 rotate
   (Punching positions) show
   90 neg rotate
   % bottom
   0.5 setlinewidth
   530 0 moveto
   17 0 rlineto
   0 15 rlineto
   stroke
   535 -2 moveto
   -5 2 rlineto
   5 2 rlineto
   stroke
   550 20 moveto
   90 rotate
   (Bottom) show
   90 neg rotate
   % top
   530 234 moveto
   17 0 rlineto
   0 -15 rlineto
   stroke
   535 232 moveto
   -5 2 rlineto
   5 2 rlineto
   stroke
   550 200 moveto
   90 rotate
   (Top) show
   90 neg rotate
   } def

%%EndProcSet

%%Page: 1
0.5 setlinewidth
1 1 1 setrgbcolor
newpath
0 0 moveto
541 0 lineto
541 244 lineto
0 244 lineto
closepath stroke
%%Card: 1
35 35 translate
cardOutline
/Helvetica findfont
10 scalefont setfont
265 250 moveto
(Layout of punching positions) centreshow
printGrid
% Char: 'T'
/Pos 1 def
[0 3] { /Hole exch def punchHole } forall
/DotMatrixPattern <00 10 10 10 10 10 10 7C> def printDotMatrix
% Char: 'H'
/Pos 2 def
[12 8] { /Hole exch def punchHole } forall
/DotMatrixPattern <00 44 44 44 7C 44 44 44> def printDotMatrix
% Char: 'I'
/Pos 3 def
[12 9] { /Hole exch def punchHole } forall
/DotMatrixPattern <00 38 10 10 10 10 10 38> def printDotMatrix
% Char: 'S'
/Pos 4 def
[0 2] { /Hole exch def punchHole } forall
/DotMatrixPattern <00 38 44 08 10 20 44 38> def printDotMatrix
% Char: ' '
/Pos 5 def
[] { /Hole exch def punchHole } forall
/DotMatrixPattern <00 00 00 00 00 00 00 00> def printDotMatrix
% Char: 'S'
/Pos 6 def
[0 2] { /Hole exch def punchHole } forall
/DotMatrixPattern <00 38 44 08 10 20 44 38> def printDotMatrix
% Char: 'H'
/Pos 7 def
[12 8] { /Hole exch def punchHole } forall
/DotMatrixPattern <00 44 44 44 7C 44 44 44> def printDotMatrix
% Char: 'O'
/Pos 8 def
[11 6] { /Hole exch def punchHole } forall
/DotMatrixPattern <00 7C 44 44 44 44 44 7C> def printDotMatrix
% Char: 'W'
/Pos 9 def
[0 6] { /Hole exch def punchHole } forall
/DotMatrixPattern <00 44 6C 54 44 44 44 44> def printDotMatrix
% Char: 'S'
/Pos 10 def
[0 2] { /Hole exch def punchHole } forall
/DotMatrixPattern <00 38 44 08 10 20 44 38> def printDotMatrix
% Char: ' '
/Pos 11 def
[] { /Hole exch def punchHole } forall
/DotMatrixPattern <00 00 00 00 00 00 00 00> def printDotMatrix
% Char: 'T'
/Pos 12 def
[0 3] { /Hole exch def punchHole } forall
/DotMatrixPattern <00 10 10 10 10 10 10 7C> def printDotMatrix
% Char: 'H'
/Pos 13 def
[12 8] { /Hole exch def punchHole } forall
/DotMatrixPattern <00 44 44 44 7C 44 44 44> def printDotMatrix
% Char: 'E'
/Pos 14 def
[12 5] { /Hole exch def punchHole } forall
/DotMatrixPattern <00 7C 40 40 78 40 40 7C> def printDotMatrix
% Char: ' '
/Pos 15 def
[] { /Hole exch def punchHole } forall
/DotMatrixPattern <00 00 00 00 00 00 00 00> def printDotMatrix
% Char: 'L'
/Pos 16 def
[11 3] { /Hole exch def punchHole } forall
/DotMatrixPattern <00 7C 40 40 40 40 40 40> def printDotMatrix
% Char: 'A'
/Pos 17 def
[12 1] { /Hole exch def punchHole } forall
/DotMatrixPattern <00 44 44 7C 44 44 28 10> def printDotMatrix
% Char: 'Y'
/Pos 18 def
[0 8] { /Hole exch def punchHole } forall
/DotMatrixPattern <00 10 10 10 10 28 44 44> def printDotMatrix
% Char: 'O'
/Pos 19 def
[11 6] { /Hole exch def punchHole } forall
/DotMatrixPattern <00 7C 44 44 44 44 44 7C> def printDotMatrix
% Char: 'U'
/Pos 20 def
[0 4] { /Hole exch def punchHole } forall
/DotMatrixPattern <00 38 44 44 44 44 44 44> def printDotMatrix
% Char: 'T'
/Pos 21 def
[0 3] { /Hole exch def punchHole } forall
/DotMatrixPattern <00 10 10 10 10 10 10 7C> def printDotMatrix
% Char: ' '
/Pos 22 def
[] { /Hole exch def punchHole } forall
/DotMatrixPattern <00 00 00 00 00 00 00 00> def printDotMatrix
% Char: 'O'
/Pos 23 def
[11 6] { /Hole exch def punchHole } forall
/DotMatrixPattern <00 7C 44 44 44 44 44 7C> def printDotMatrix
% Char: 'F'
/Pos 24 def
[12 6] { /Hole exch def punchHole } forall
/DotMatrixPattern <00 40 40 40 78 40 40 7C> def printDotMatrix
% Char: ' '
/Pos 25 def
[] { /Hole exch def punchHole } forall
/DotMatrixPattern <00 00 00 00 00 00 00 00> def printDotMatrix
% Char: 'P'
/Pos 26 def
[11 7] { /Hole exch def punchHole } forall
/DotMatrixPattern <00 40 40 40 78 44 44 78> def printDotMatrix
% Char: 'U'
/Pos 27 def
[0 4] { /Hole exch def punchHole } forall
/DotMatrixPattern <00 38 44 44 44 44 44 44> def printDotMatrix
% Char: 'N'
/Pos 28 def
[11 5] { /Hole exch def punchHole } forall
/DotMatrixPattern <00 44 44 44 4C 54 64 44> def printDotMatrix
% Char: 'C'
/Pos 29 def
[12 3] { /Hole exch def punchHole } forall
/DotMatrixPattern <00 38 44 40 40 40 44 38> def printDotMatrix
% Char: 'H'
/Pos 30 def
[12 8] { /Hole exch def punchHole } forall
/DotMatrixPattern <00 44 44 44 7C 44 44 44> def printDotMatrix
% Char: 'I'
/Pos 31 def
[12 9] { /Hole exch def punchHole } forall
/DotMatrixPattern <00 38 10 10 10 10 10 38> def printDotMatrix
% Char: 'N'
/Pos 32 def
[11 5] { /Hole exch def punchHole } forall
/DotMatrixPattern <00 44 44 44 4C 54 64 44> def printDotMatrix
% Char: 'G'
/Pos 33 def
[12 7] { /Hole exch def punchHole } forall
/DotMatrixPattern <00 3C 44 44 4C 40 40 3C> def printDotMatrix
% Char: ' '
/Pos 34 def
[] { /Hole exch def punchHole } forall
/DotMatrixPattern <00 00 00 00 00 00 00 00> def printDotMatrix
% Char: 'P'
/Pos 35 def
[11 7] { /Hole exch def punchHole } forall
/DotMatrixPattern <00 40 40 40 78 44 44 78> def printDotMatrix
% Char: 'O'
/Pos 36 def
[11 6] { /Hole exch def punchHole } forall
/DotMatrixPattern <00 7C 44 44 44 44 44 7C> def printDotMatrix
% Char: 'S'
/Pos 37 def
[0 2] { /Hole exch def punchHole } forall
/DotMatrixPattern <00 38 44 08 10 20 44 38> def printDotMatrix
% Char: 'I'
/Pos 38 def
[12 9] { /Hole exch def punchHole } forall
/DotMatrixPattern <00 38 10 10 10 10 10 38> def printDotMatrix
% Char: 'T'
/Pos 39 def
[0 3] { /Hole exch def punchHole } forall
/DotMatrixPattern <00 10 10 10 10 10 10 7C> def printDotMatrix
% Char: 'I'
/Pos 40 def
[12 9] { /Hole exch def punchHole } forall
/DotMatrixPattern <00 38 10 10 10 10 10 38> def printDotMatrix
% Char: 'O'
/Pos 41 def
[11 6] { /Hole exch def punchHole } forall
/DotMatrixPattern <00 7C 44 44 44 44 44 7C> def printDotMatrix
% Char: 'N'
/Pos 42 def
[11 5] { /Hole exch def punchHole } forall
/DotMatrixPattern <00 44 44 44 4C 54 64 44> def printDotMatrix
% Char: 'S'
/Pos 43 def
[0 2] { /Hole exch def punchHole } forall
/DotMatrixPattern <00 38 44 08 10 20 44 38> def printDotMatrix
% Char: ' '
/Pos 44 def
[] { /Hole exch def punchHole } forall
/DotMatrixPattern <00 00 00 00 00 00 00 00> def printDotMatrix
% Char: 'O'
/Pos 45 def
[11 6] { /Hole exch def punchHole } forall
/DotMatrixPattern <00 7C 44 44 44 44 44 7C> def printDotMatrix
% Char: 'N'
/Pos 46 def
[11 5] { /Hole exch def punchHole } forall
/DotMatrixPattern <00 44 44 44 4C 54 64 44> def printDotMatrix
% Char: ' '
/Pos 47 def
[] { /Hole exch def punchHole } forall
/DotMatrixPattern <00 00 00 00 00 00 00 00> def printDotMatrix
% Char: 'A'
/Pos 48 def
[12 1] { /Hole exch def punchHole } forall
/DotMatrixPattern <00 44 44 7C 44 44 28 10> def printDotMatrix
% Char: ' '
/Pos 49 def
[] { /Hole exch def punchHole } forall
/DotMatrixPattern <00 00 00 00 00 00 00 00> def printDotMatrix
% Char: '8'
/Pos 50 def
[8] { /Hole exch def punchHole } forall
/DotMatrixPattern <00 38 44 44 38 44 44 38> def printDotMatrix
% Char: '0'
/Pos 51 def
[0] { /Hole exch def punchHole } forall
/DotMatrixPattern <00 18 24 24 24 24 24 18> def printDotMatrix
% Char: ' '
/Pos 52 def
[] { /Hole exch def punchHole } forall
/DotMatrixPattern <00 00 00 00 00 00 00 00> def printDotMatrix
% Char: 'C'
/Pos 53 def
[12 3] { /Hole exch def punchHole } forall
/DotMatrixPattern <00 38 44 40 40 40 44 38> def printDotMatrix
% Char: 'O'
/Pos 54 def
[11 6] { /Hole exch def punchHole } forall
/DotMatrixPattern <00 7C 44 44 44 44 44 7C> def printDotMatrix
% Char: 'L'
/Pos 55 def
[11 3] { /Hole exch def punchHole } forall
/DotMatrixPattern <00 7C 40 40 40 40 40 40> def printDotMatrix
% Char: 'U'
/Pos 56 def
[0 4] { /Hole exch def punchHole } forall
/DotMatrixPattern <00 38 44 44 44 44 44 44> def printDotMatrix
% Char: 'M'
/Pos 57 def
[11 4] { /Hole exch def punchHole } forall
/DotMatrixPattern <00 44 44 44 54 54 6C 44> def printDotMatrix
% Char: 'N'
/Pos 58 def
[11 5] { /Hole exch def punchHole } forall
/DotMatrixPattern <00 44 44 44 4C 54 64 44> def printDotMatrix
% Char: 'S'
/Pos 59 def
[0 2] { /Hole exch def punchHole } forall
/DotMatrixPattern <00 38 44 08 10 20 44 38> def printDotMatrix
% Char: ' '
/Pos 60 def
[] { /Hole exch def punchHole } forall
/DotMatrixPattern <00 00 00 00 00 00 00 00> def printDotMatrix
% Char: 'P'
/Pos 61 def
[11 7] { /Hole exch def punchHole } forall
/DotMatrixPattern <00 40 40 40 78 44 44 78> def printDotMatrix
% Char: 'U'
/Pos 62 def
[0 4] { /Hole exch def punchHole } forall
/DotMatrixPattern <00 38 44 44 44 44 44 44> def printDotMatrix
% Char: 'N'
/Pos 63 def
[11 5] { /Hole exch def punchHole } forall
/DotMatrixPattern <00 44 44 44 4C 54 64 44> def printDotMatrix
% Char: 'C'
/Pos 64 def
[12 3] { /Hole exch def punchHole } forall
/DotMatrixPattern <00 38 44 40 40 40 44 38> def printDotMatrix
% Char: 'H'
/Pos 65 def
[12 8] { /Hole exch def punchHole } forall
/DotMatrixPattern <00 44 44 44 7C 44 44 44> def printDotMatrix
% Char: 'E'
/Pos 66 def
[12 5] { /Hole exch def punchHole } forall
/DotMatrixPattern <00 7C 40 40 78 40 40 7C> def printDotMatrix
% Char: 'D'
/Pos 67 def
[12 4] { /Hole exch def punchHole } forall
/DotMatrixPattern <00 78 24 24 24 24 24 78> def printDotMatrix
% Char: ' '
/Pos 68 def
[] { /Hole exch def punchHole } forall
/DotMatrixPattern <00 00 00 00 00 00 00 00> def printDotMatrix
% Char: 'C'
/Pos 69 def
[12 3] { /Hole exch def punchHole } forall
/DotMatrixPattern <00 38 44 40 40 40 44 38> def printDotMatrix
% Char: 'A'
/Pos 70 def
[12 1] { /Hole exch def punchHole } forall
/DotMatrixPattern <00 44 44 7C 44 44 28 10> def printDotMatrix
% Char: 'R'
/Pos 71 def
[11 9] { /Hole exch def punchHole } forall
/DotMatrixPattern <00 44 48 50 78 44 44 78> def printDotMatrix
% Char: 'D'
/Pos 72 def
[12 4] { /Hole exch def punchHole } forall
/DotMatrixPattern <00 78 24 24 24 24 24 78> def printDotMatrix
showpage
